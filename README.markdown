# –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ü–∏–∫—á–∏

–ü—Ä–æ–µ–∫—Ç ETL –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ç–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤ ¬´–ü–∏–∫—á–∞¬ª –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏. –í–∫–ª—é—á–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –ø–æ—Ç–æ–∫–æ–≤—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —á–µ—Ä–µ–∑ Kafka, –∞–Ω–∞–ª–∏—Ç–∏–∫—É –≤ ClickHouse, –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é –≤ Grafana –∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ Airflow.

üöÄ **–¶–µ–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞**:
- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö (–ø–æ–∫—É–ø–∞—Ç–µ–ª–∏, –ø–æ–∫—É–ø–∫–∏, —Ç–æ–≤–∞—Ä—ã, –º–∞–≥–∞–∑–∏–Ω—ã).
- –ü–æ—Ç–æ–∫–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ—Ä–µ–∑ Kafka —Å –º–∞—Å–∫–∏—Ä–æ–≤–∫–æ–π PII (email, phone).
- –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤ ClickHouse —Å —Å—ã—Ä—ã–º–∏ –∏ —á–∏—Å—Ç—ã–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏, –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è–º–∏.
- –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Å –ø–æ–º–æ—â—å—é PySpark, –≤—ã–≥—Ä—É–∑–∫–∞ –≤ MinIO.
- –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≤ Grafana.
- –û—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è ETL —á–µ—Ä–µ–∑ Airflow.
- –ê–ª–µ—Ä—Ç–∏–Ω–≥ —á–µ—Ä–µ–∑ Telegram.

## üõ† –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫

### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
- **Airflow** ‚Äî –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è ETL.
- **ClickHouse** ‚Äî –∞–Ω–∞–ª–∏—Ç–∏–∫–∞.
- **PySpark** ‚Äî –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤.
- **Kafka + Zookeeper** ‚Äî –ø–æ—Ç–æ–∫–æ–≤–∞—è –ø–µ—Ä–µ–¥–∞—á–∞.
- **MongoDB** ‚Äî —Ö—Ä–∞–Ω–µ–Ω–∏–µ JSON (—Å–∏–º—É–ª—è—Ü–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –±–∞–∑—ã).
- **MinIO** ‚Äî S3-—Ö—Ä–∞–Ω–∏–ª–∏—â–µ.
- **Grafana** ‚Äî –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è.

### –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞
- **Docker** ‚Äî –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è.
- **Python 3.11** ‚Äî —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö.
- **Git** ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–æ–º.

## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
pikcha-analytics/
‚îú‚îÄ‚îÄ clickhouse/                    # SQL-—Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è ClickHouse
‚îÇ   ‚îú‚îÄ‚îÄ raw_tables.sql            # –°—ã—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã
‚îÇ   ‚îú‚îÄ‚îÄ mart_mv.sql               # –ß–∏—Å—Ç—ã–µ —Ç–∞–±–ª–∏—Ü—ã –∏ MV
‚îÇ   ‚îî‚îÄ‚îÄ alerts.sql                # –ó–∞–ø—Ä–æ—Å—ã –¥–ª—è –∞–ª–µ—Ä—Ç–æ–≤
‚îú‚îÄ‚îÄ docker/                       # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Docker
‚îÇ   ‚îú‚îÄ‚îÄ docker-compose.yml        # –°–µ—Ä–≤–∏—Å—ã
‚îÇ   ‚îî‚îÄ‚îÄ Dockerfile.airflow        # Airflow Dockerfile
‚îú‚îÄ‚îÄ docs/                         # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
‚îÇ   ‚îî‚îÄ‚îÄ run_instructions.md       # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
‚îú‚îÄ‚îÄ etl/                          # ETL-—Å–∫—Ä–∏–ø—Ç—ã
‚îÇ   ‚îú‚îÄ‚îÄ pyspark_etl.py            # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
‚îÇ   ‚îî‚îÄ‚îÄ requirements.txt          # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
‚îú‚îÄ‚îÄ generator/                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
‚îÇ   ‚îú‚îÄ‚îÄ generate_data.py          # –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä JSON
‚îÇ   ‚îî‚îÄ‚îÄ sample_products.json      # –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–¥—É–∫—Ç–æ–≤
‚îú‚îÄ‚îÄ grafana/                      # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Grafana
‚îÇ   ‚îî‚îÄ‚îÄ piccha-dashboard.json     # –î–∞—à–±–æ—Ä–¥
‚îú‚îÄ‚îÄ infra/grafana/provisioning/   # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Grafana
‚îú‚îÄ‚îÄ loader/                       # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
‚îÇ   ‚îú‚îÄ‚îÄ load_to_nosql.py         # JSON –≤ MongoDB
‚îÇ   ‚îú‚îÄ‚îÄ kafka_publisher.py        # –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Kafka
‚îÇ   ‚îî‚îÄ‚îÄ kafka_to_clickhouse.py    # Kafka –≤ ClickHouse
‚îú‚îÄ‚îÄ dags/                         # DAG'–∏ Airflow
‚îÇ   ‚îî‚îÄ‚îÄ etl_dag.py               # –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π ETL
‚îú‚îÄ‚îÄ data/                         # –î–∞–Ω–Ω—ã–µ
‚îÇ   ‚îú‚îÄ‚îÄ stores/                  # –ú–∞–≥–∞–∑–∏–Ω—ã
‚îÇ   ‚îú‚îÄ‚îÄ products/                # –¢–æ–≤–∞—Ä—ã
‚îÇ   ‚îú‚îÄ‚îÄ customers/               # –ü–æ–∫—É–ø–∞—Ç–µ–ª–∏
‚îÇ   ‚îî‚îÄ‚îÄ purchases/               # –ü–æ–∫—É–ø–∫–∏
‚îú‚îÄ‚îÄ outputs/                      # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã ETL (CSV)
‚îî‚îÄ‚îÄ README.md                     # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
```

## üõ† –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫

### –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è
- **Git**
- **Python 3.11**
- **Docker Desktop** (—Å WSL 2)
- **Java 17** (–¥–ª—è PySpark)
- **MongoDB Compass** (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

### 1. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
```bash
git clone https://github.com/AlexanderFL7/pikcha-analytics.git
cd pikcha-analytics
```

### 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python
1. –£—Å—Ç–∞–Ω–æ–≤–∏ Python 3.11: [–°–∫–∞—á–∞—Ç—å](https://www.python.org/downloads/windows/). –í–∫–ª—é—á–∏ **Add Python to PATH**.
2. –ü—Ä–æ–≤–µ—Ä—å:
   ```powershell
   python --version
   pip --version
   ```
3. –°–æ–∑–¥–∞–π –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–π –æ–∫—Ä—É–∂–µ–Ω–∏–µ:
   ```powershell
   python -m venv venv311
   .\venv311\Scripts\Activate.ps1
   ```
4. –£—Å—Ç–∞–Ω–æ–≤–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
   ```powershell
   pip install -r etl/requirements.txt
   pip install kafka-python clickhouse-connect pymongo
   ```

### 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Java
1. –£—Å—Ç–∞–Ω–æ–≤–∏ OpenJDK 17: [–°–∫–∞—á–∞—Ç—å](https://adoptium.net/temurin/releases/?version=17).
2. –ù–∞—Å—Ç—Ä–æ–π `JAVA_HOME`:
   ```powershell
   $Env:JAVA_HOME = "C:\Program Files\Eclipse Adoptium\jdk-17"
   $Env:Path += ";$Env:JAVA_HOME\bin"
   ```
3. –ü—Ä–æ–≤–µ—Ä—å:
   ```powershell
   java -version
   ```

### 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
1. –£—Å—Ç–∞–Ω–æ–≤–∏ Docker Desktop: [–°–∫–∞—á–∞—Ç—å](https://www.docker.com/products/docker-desktop/). –í–∫–ª—é—á–∏ WSL 2.
2. –£—Å—Ç–∞–Ω–æ–≤–∏ WSL 2:
   ```powershell
   wsl --install
   ```
3. –ü—Ä–æ–≤–µ—Ä—å:
   ```powershell
   docker --version
   docker-compose --version
   ```

### 5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
–°–æ–∑–¥–∞–π —Ñ–∞–π–ª `.env`:
```bash
AIRFLOW_UID=50000
AIRFLOW_GID=0
POSTGRES_USER=airflow
POSTGRES_PASSWORD=airflow
CLICKHOUSE_USER=default
CLICKHOUSE_PASSWORD=
MINIO_ROOT_USER=admin
MINIO_ROOT_PASSWORD=admin123
MINIO_BUCKET_NAME=analytics
KAFKA_BOOTSTRAP=host.docker.internal:9092
KAFKA_MASK_KEY=my_secret_key
TELEGRAM_BOT_TOKEN=8094935037:AAEM3EYPy3hmzJtic6nZKKo3iKaGffq09qE
TELEGRAM_CHAT_ID=428228184
```

### 6. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
```powershell
cd docker
docker-compose up -d
docker ps
```

### 7. –ü–æ—Ä—Ç—ã –∏ –¥–æ—Å—Ç—É–ø
- **Airflow**: `http://localhost:8080` (airflow/airflow)
- **ClickHouse**: `http://localhost:8123`, Native: `9000`
- **Grafana**: `http://localhost:3000` (admin/Grafana1122)
- **MinIO**: `http://localhost:9001` (admin/admin123)
- **MongoDB**: `mongodb://localhost:27017`
- **Kafka**: `host.docker.internal:9092`

### 8. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
```powershell
.\venv311\Scripts\Activate.ps1
python generator/generate_data.py
```

### 9. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
1. –í MongoDB:
   ```powershell
   python loader/load_to_nosql.py
   ```
2. –í Kafka:
   ```powershell
   python loader/kafka_publisher.py
   ```
3. –í ClickHouse:
   ```powershell
   python loader/kafka_to_clickhouse.py
   ```

### 10. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ ClickHouse
```powershell
Get-Content clickhouse/raw_tables.sql | docker exec -i docker-clickhouse-1 clickhouse-client --multiquery
Get-Content clickhouse/mart_mv.sql | docker exec -i docker-clickhouse-1 clickhouse-client --multiquery
curl "http://localhost:8123/?query=SHOW%20TABLES%20FROM%20piccha"
```

### 11. –ó–∞–ø—É—Å–∫ ETL
```powershell
$Env:PYSPARK_PYTHON = "C:\Users\Sanya\Desktop\pikcha-analytics\venv311\Scripts\python.exe"
$Env:PYSPARK_DRIVER_PYTHON = "C:\Users\Sanya\Desktop\pikcha-analytics\venv311\Scripts\python.exe"
python etl/pyspark_etl.py
```

### 12. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Grafana
1. –í–æ–π–¥–∏: `http://localhost:3000` (admin/Grafana1122).
2. –î–æ–±–∞–≤—å ClickHouse:
   - Server: `clickhouse`
   - Port: `8123`
   - Protocol: `HTTP`
   - Username: `default`
   - Database: `piccha`
3. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π `grafana/piccha-dashboard.json`.

### 13. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Airflow
1. –í–æ–π–¥–∏: `http://localhost:8080` (airflow/airflow).
2. –í–∫–ª—é—á–∏ DAG `pikcha_etl_daily`.

### 14. –ê–ª–µ—Ä—Ç–∏–Ω–≥
1. –í Grafana —Å–æ–∑–¥–∞–π Contact Point (Telegram):
   - Bot Token: `8094935037:AAEM3EYPy3hmzJtic6nZKKo3iKaGffq09qE`
   - Chat ID: `428228184`
2. –ù–∞—Å—Ç—Ä–æ–π Alert Rules (—Å–º. `clickhouse/alerts.sql`).

## üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
- **Grafana**: `piccha-dashboard.json`:
  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫ –∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤.
  - –î–∏–Ω–∞–º–∏–∫–∞ –ø–æ–∫—É–ø–æ–∫ –ø–æ –¥–Ω—è–º.
  - –¢–æ–ø-10 –º–∞–≥–∞–∑–∏–Ω–æ–≤ –ø–æ –≤—ã—Ä—É—á–∫–µ.
- **MinIO**: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ `analytics`.
- **Telegram**: –ê–ª–µ—Ä—Ç—ã –æ –¥—É–±–ª–∏–∫–∞—Ç–∞—Ö (>50%).

## üìù –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
- –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: `docs/run_instructions.md`
- [Airflow](https://airflow.apache.org/docs/)
- [ClickHouse](https://clickhouse.com/docs/)
- [Kafka](https://kafka.apache.org/documentation/)
- [PySpark](https://spark.apache.org/docs/latest/api/python/)
- [Grafana](https://grafana.com/docs/)
- [MinIO](https://min.io/docs/)
- [MongoDB](https://www.mongodb.com/docs/)

## ü§ù –í–∫–ª–∞–¥ –≤ –ø—Ä–æ–µ–∫—Ç
1. –§–æ—Ä–∫–Ω–∏: `https://github.com/AlexanderFL7/pikcha-analytics`
2. –°–æ–∑–¥–∞–π –≤–µ—Ç–∫—É: `git checkout -b feature/your-feature`
3. –ó–∞—Ñ–∏–∫—Å–∏—Ä—É–π: `git commit -m "Add your feature"`
4. –û—Ç–ø—Ä–∞–≤—å: `git push origin feature/your-feature`
5. –°–æ–∑–¥–∞–π Pull Request.

## üìÑ –õ–∏—Ü–µ–Ω–∑–∏—è
MIT. –°–º. `LICENSE`.

## üìß –ö–æ–Ω—Ç–∞–∫—Ç—ã
- **–ê–≤—Ç–æ—Ä**: –§–µ–¥—á—É–∫ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –õ–µ–æ–Ω–∏–¥–æ–≤–∏—á (@AlexanderFL7)
- **Email**: [al-fedchuk@yandex.ru](mailto:al-fedchuk@yandex.ru)
- –°–æ–∑–¥–∞–≤–∞–π—Ç–µ Issues –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤.

## üöß –ò–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
- `KafkaTimeoutError` –≤ `kafka_to_clickhouse.py` (–ø—Ä–æ–≤–µ—Ä–∏—Ç—å `host.docker.internal:9092`).
- –ö–æ–Ω—Ñ–ª–∏–∫—Ç –ø–æ—Ä—Ç–∞ 5432 –¥–ª—è `airflow_postgres`.
- –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–∑–Ω–∞–∫–∏ –≤ `pyspark_etl.py` (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∞–Ω–∞–ª–∏–∑ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏).
- –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥—ã –≤ Grafana.